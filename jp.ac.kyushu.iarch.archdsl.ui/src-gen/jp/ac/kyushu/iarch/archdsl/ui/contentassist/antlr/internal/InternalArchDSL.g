/*
* generated by Xtext
*/
grammar InternalArchDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package jp.ac.kyushu.iarch.archdsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jp.ac.kyushu.iarch.archdsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jp.ac.kyushu.iarch.archdsl.services.ArchDSLGrammarAccess;

}

@parser::members {
 
 	private ArchDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ArchDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDflow
entryRuleDflow 
:
{ before(grammarAccess.getDflowRule()); }
	 ruleDflow
{ after(grammarAccess.getDflowRule()); } 
	 EOF 
;

// Rule Dflow
ruleDflow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDflowAccess().getGroup()); }
(rule__Dflow__Group__0)
{ after(grammarAccess.getDflowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDfa
entryRuleDfa 
:
{ before(grammarAccess.getDfaRule()); }
	 ruleDfa
{ after(grammarAccess.getDfaRule()); } 
	 EOF 
;

// Rule Dfa
ruleDfa
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDfaAccess().getGroup()); }
(rule__Dfa__Group__0)
{ after(grammarAccess.getDfaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehavior
entryRuleBehavior 
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorAccess().getGroup()); }
(rule__Behavior__Group__0)
{ after(grammarAccess.getBehaviorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataflow
entryRuleDataflow 
:
{ before(grammarAccess.getDataflowRule()); }
	 ruleDataflow
{ after(grammarAccess.getDataflowRule()); } 
	 EOF 
;

// Rule Dataflow
ruleDataflow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataflowAccess().getGroup()); }
(rule__Dataflow__Group__0)
{ after(grammarAccess.getDataflowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInterfacesAssignment_0()); }
(rule__Model__InterfacesAssignment_0)*
{ after(grammarAccess.getModelAccess().getInterfacesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBehaviorsAssignment_1()); }
(rule__Model__BehaviorsAssignment_1)*
{ after(grammarAccess.getModelAccess().getBehaviorsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDflowsAssignment_2()); }
(rule__Model__DflowsAssignment_2)*
{ after(grammarAccess.getModelAccess().getDflowsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDfasAssignment_3()); }
(rule__Model__DfasAssignment_3)*
{ after(grammarAccess.getModelAccess().getDfasAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDataflowsAssignment_4()); }
(rule__Model__DataflowsAssignment_4)*
{ after(grammarAccess.getModelAccess().getDataflowsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInterfaceComponentKeyword_0()); }

	'interface component' 

{ after(grammarAccess.getInterfaceAccess().getInterfaceComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
(rule__Interface__NameAssignment_1)
{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMethodsAssignment_3()); }
(rule__Interface__MethodsAssignment_3)*
{ after(grammarAccess.getInterfaceAccess().getMethodsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
(rule__Method__TypeAssignment_0)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
(rule__Method__NameAssignment_1)
{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3()); }
(rule__Method__Group_3__0)?
{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisSemicolonKeyword_4()); }

	');' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Method__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamAssignment_3_0()); }
(rule__Method__ParamAssignment_3_0)
{ after(grammarAccess.getMethodAccess().getParamAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
(rule__Method__Group_3_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamAssignment_3_1_1()); }
(rule__Method__ParamAssignment_3_1_1)
{ after(grammarAccess.getMethodAccess().getParamAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeAssignment_0()); }
(rule__Param__TypeAssignment_0)
{ after(grammarAccess.getParamAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
(rule__Param__NameAssignment_1)
{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dflow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dflow__Group__0__Impl
	rule__Dflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dflow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDflowAccess().getDflowDataKeyword_0()); }

	'Dflow data' 

{ after(grammarAccess.getDflowAccess().getDflowDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dflow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dflow__Group__1__Impl
	rule__Dflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dflow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDflowAccess().getNameAssignment_1()); }
(rule__Dflow__NameAssignment_1)
{ after(grammarAccess.getDflowAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dflow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dflow__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dflow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDflowAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getDflowAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dfa__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dfa__Group__0__Impl
	rule__Dfa__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dfa__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDfaAccess().getDfaKeyword_0()); }

	'Dfa' 

{ after(grammarAccess.getDfaAccess().getDfaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dfa__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dfa__Group__1__Impl
	rule__Dfa__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dfa__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDfaAccess().getNameAssignment_1()); }
(rule__Dfa__NameAssignment_1)
{ after(grammarAccess.getDfaAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dfa__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dfa__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dfa__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDfaAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getDfaAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Behavior__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getInterfaceAssignment_0()); }
(rule__Behavior__InterfaceAssignment_0)
{ after(grammarAccess.getBehaviorAccess().getInterfaceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getBehaviorAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__2__Impl
	rule__Behavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getBehaviorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__3__Impl
	rule__Behavior__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getGroup_3()); }
(rule__Behavior__Group_3__0)?
{ after(grammarAccess.getBehaviorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getRightParenthesisSemicolonKeyword_4()); }

	');' 

{ after(grammarAccess.getBehaviorAccess().getRightParenthesisSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Behavior__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3__0__Impl
	rule__Behavior__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCallAssignment_3_0()); }
(rule__Behavior__CallAssignment_3_0)
{ after(grammarAccess.getBehaviorAccess().getCallAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3__1__Impl
	rule__Behavior__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getGroup_3_1()); }
(rule__Behavior__Group_3_1__0)*
{ after(grammarAccess.getBehaviorAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3__2__Impl
	rule__Behavior__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getHyphenMinusGreaterThanSignKeyword_3_2()); }

	'->' 

{ after(grammarAccess.getBehaviorAccess().getHyphenMinusGreaterThanSignKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getEndAssignment_3_3()); }
(rule__Behavior__EndAssignment_3_3)
{ after(grammarAccess.getBehaviorAccess().getEndAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Behavior__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3_1__0__Impl
	rule__Behavior__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getHyphenMinusGreaterThanSignKeyword_3_1_0()); }

	'->' 

{ after(grammarAccess.getBehaviorAccess().getHyphenMinusGreaterThanSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCallAssignment_3_1_1()); }
(rule__Behavior__CallAssignment_3_1_1)
{ after(grammarAccess.getBehaviorAccess().getCallAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dataflow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group__0__Impl
	rule__Dataflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getDfaAssignment_0()); }
(rule__Dataflow__DfaAssignment_0)
{ after(grammarAccess.getDataflowAccess().getDfaAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group__1__Impl
	rule__Dataflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDataflowAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group__2__Impl
	rule__Dataflow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getDataflowAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group__3__Impl
	rule__Dataflow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getGroup_3()); }
(rule__Dataflow__Group_3__0)?
{ after(grammarAccess.getDataflowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getRightSquareBracketSemicolonKeyword_4()); }

	'];' 

{ after(grammarAccess.getDataflowAccess().getRightSquareBracketSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Dataflow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3__0__Impl
	rule__Dataflow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getGroup_3_0()); }
(rule__Dataflow__Group_3_0__0)*
{ after(grammarAccess.getDataflowAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getEndAssignment_3_1()); }
(rule__Dataflow__EndAssignment_3_1)
{ after(grammarAccess.getDataflowAccess().getEndAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dataflow__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3_0__0__Impl
	rule__Dataflow__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getVerticalLineKeyword_3_0_0()); }

	'|' 

{ after(grammarAccess.getDataflowAccess().getVerticalLineKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3_0__1__Impl
	rule__Dataflow__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getGetflowAssignment_3_0_1()); }
(rule__Dataflow__GetflowAssignment_3_0_1)
{ after(grammarAccess.getDataflowAccess().getGetflowAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3_0__2__Impl
	rule__Dataflow__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getVerticalLineHyphenMinusGreaterThanSignGreaterThanSignKeyword_3_0_2()); }

	'|->>' 

{ after(grammarAccess.getDataflowAccess().getVerticalLineHyphenMinusGreaterThanSignGreaterThanSignKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3_0__3__Impl
	rule__Dataflow__Group_3_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getCallAssignment_3_0_3()); }
(rule__Dataflow__CallAssignment_3_0_3)
{ after(grammarAccess.getDataflowAccess().getCallAssignment_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dataflow__Group_3_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dataflow__Group_3_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__Group_3_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getHyphenMinusGreaterThanSignGreaterThanSignKeyword_3_0_4()); }

	'->>' 

{ after(grammarAccess.getDataflowAccess().getHyphenMinusGreaterThanSignGreaterThanSignKeyword_3_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__InterfacesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInterfacesInterfaceParserRuleCall_0_0()); }
	ruleInterface{ after(grammarAccess.getModelAccess().getInterfacesInterfaceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BehaviorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBehaviorsBehaviorParserRuleCall_1_0()); }
	ruleBehavior{ after(grammarAccess.getModelAccess().getBehaviorsBehaviorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DflowsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDflowsDflowParserRuleCall_2_0()); }
	ruleDflow{ after(grammarAccess.getModelAccess().getDflowsDflowParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DfasAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDfasDfaParserRuleCall_3_0()); }
	ruleDfa{ after(grammarAccess.getModelAccess().getDfasDfaParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DataflowsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDataflowsDataflowParserRuleCall_4_0()); }
	ruleDataflow{ after(grammarAccess.getModelAccess().getDataflowsDataflowParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MethodsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMethodsMethodParserRuleCall_3_0()); }
	ruleMethod{ after(grammarAccess.getInterfaceAccess().getMethodsMethodParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getTypeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamParamParserRuleCall_3_0_0()); }
	ruleParam{ after(grammarAccess.getMethodAccess().getParamParamParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamParamParserRuleCall_3_1_1_0()); }
	ruleParam{ after(grammarAccess.getMethodAccess().getParamParamParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParamAccess().getTypeIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dflow__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDflowAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDflowAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dfa__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDfaAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDfaAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__InterfaceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getInterfaceInterfaceCrossReference_0_0()); }
(
{ before(grammarAccess.getBehaviorAccess().getInterfaceInterfaceIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBehaviorAccess().getInterfaceInterfaceIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBehaviorAccess().getInterfaceInterfaceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__CallAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCallMethodCrossReference_3_0_0()); }
(
{ before(grammarAccess.getBehaviorAccess().getCallMethodFQNParserRuleCall_3_0_0_1()); }
	ruleFQN{ after(grammarAccess.getBehaviorAccess().getCallMethodFQNParserRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getBehaviorAccess().getCallMethodCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__CallAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCallMethodCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getBehaviorAccess().getCallMethodFQNParserRuleCall_3_1_1_0_1()); }
	ruleFQN{ after(grammarAccess.getBehaviorAccess().getCallMethodFQNParserRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getBehaviorAccess().getCallMethodCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__EndAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getEndInterfaceCrossReference_3_3_0()); }
(
{ before(grammarAccess.getBehaviorAccess().getEndInterfaceIDTerminalRuleCall_3_3_0_1()); }
	RULE_ID{ after(grammarAccess.getBehaviorAccess().getEndInterfaceIDTerminalRuleCall_3_3_0_1()); }
)
{ after(grammarAccess.getBehaviorAccess().getEndInterfaceCrossReference_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__DfaAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getDfaDfaCrossReference_0_0()); }
(
{ before(grammarAccess.getDataflowAccess().getDfaDfaIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDataflowAccess().getDfaDfaIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDataflowAccess().getDfaDfaCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__GetflowAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getGetflowDflowCrossReference_3_0_1_0()); }
(
{ before(grammarAccess.getDataflowAccess().getGetflowDflowIDTerminalRuleCall_3_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataflowAccess().getGetflowDflowIDTerminalRuleCall_3_0_1_0_1()); }
)
{ after(grammarAccess.getDataflowAccess().getGetflowDflowCrossReference_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__CallAssignment_3_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getCallMethodCrossReference_3_0_3_0()); }
(
{ before(grammarAccess.getDataflowAccess().getCallMethodFQNParserRuleCall_3_0_3_0_1()); }
	ruleFQN{ after(grammarAccess.getDataflowAccess().getCallMethodFQNParserRuleCall_3_0_3_0_1()); }
)
{ after(grammarAccess.getDataflowAccess().getCallMethodCrossReference_3_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dataflow__EndAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataflowAccess().getEndInterfaceCrossReference_3_1_0()); }
(
{ before(grammarAccess.getDataflowAccess().getEndInterfaceIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataflowAccess().getEndInterfaceIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getDataflowAccess().getEndInterfaceCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


