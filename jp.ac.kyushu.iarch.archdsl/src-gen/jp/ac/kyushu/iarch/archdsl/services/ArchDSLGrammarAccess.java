/*
* generated by Xtext
*/
package jp.ac.kyushu.iarch.archdsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ArchDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cInterfacesAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cInterfacesInterfaceParserRuleCall_0_0_0 = (RuleCall)cInterfacesAssignment_0_0.eContents().get(0);
		private final Assignment cU_interfacesAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cU_interfacesUncertainInterfaceParserRuleCall_0_1_0 = (RuleCall)cU_interfacesAssignment_0_1.eContents().get(0);
		private final Assignment cBehaviorsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBehaviorsBehaviorParserRuleCall_1_0 = (RuleCall)cBehaviorsAssignment_1.eContents().get(0);
		
		//Model:
		//	(interfaces+=Interface | u_interfaces+=UncertainInterface)* behaviors+=Behavior*;
		public ParserRule getRule() { return rule; }

		//(interfaces+=Interface | u_interfaces+=UncertainInterface)* behaviors+=Behavior*
		public Group getGroup() { return cGroup; }

		//(interfaces+=Interface | u_interfaces+=UncertainInterface)*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//interfaces+=Interface
		public Assignment getInterfacesAssignment_0_0() { return cInterfacesAssignment_0_0; }

		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_0_0_0() { return cInterfacesInterfaceParserRuleCall_0_0_0; }

		//u_interfaces+=UncertainInterface
		public Assignment getU_interfacesAssignment_0_1() { return cU_interfacesAssignment_0_1; }

		//UncertainInterface
		public RuleCall getU_interfacesUncertainInterfaceParserRuleCall_0_1_0() { return cU_interfacesUncertainInterfaceParserRuleCall_0_1_0; }

		//behaviors+=Behavior*
		public Assignment getBehaviorsAssignment_1() { return cBehaviorsAssignment_1; }

		//Behavior
		public RuleCall getBehaviorsBehaviorParserRuleCall_1_0() { return cBehaviorsBehaviorParserRuleCall_1_0; }
	}

	public class UncertainInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UncertainInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterfaceUncertainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cU_extendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSuperInterfacesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSuperInterfacesInterfaceCrossReference_3_0 = (CrossReference)cSuperInterfacesAssignment_3.eContents().get(0);
		private final RuleCall cSuperInterfacesInterfaceIDTerminalRuleCall_3_0_1 = (RuleCall)cSuperInterfacesInterfaceCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cAltmethodsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cAltmethodsAltMethodParserRuleCall_5_0_0 = (RuleCall)cAltmethodsAssignment_5_0.eContents().get(0);
		private final Assignment cOptmethodsAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cOptmethodsOptMethodParserRuleCall_5_1_0 = (RuleCall)cOptmethodsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//UncertainInterface:
		//	"interface uncertain" name=ID "u_extends" superInterfaces+=[Interface] "{" (altmethods+=AltMethod |
		//	optmethods+=OptMethod)* "}";
		public ParserRule getRule() { return rule; }

		//"interface uncertain" name=ID "u_extends" superInterfaces+=[Interface] "{" (altmethods+=AltMethod |
		//optmethods+=OptMethod)* "}"
		public Group getGroup() { return cGroup; }

		//"interface uncertain"
		public Keyword getInterfaceUncertainKeyword_0() { return cInterfaceUncertainKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"u_extends"
		public Keyword getU_extendsKeyword_2() { return cU_extendsKeyword_2; }

		//superInterfaces+=[Interface]
		public Assignment getSuperInterfacesAssignment_3() { return cSuperInterfacesAssignment_3; }

		//[Interface]
		public CrossReference getSuperInterfacesInterfaceCrossReference_3_0() { return cSuperInterfacesInterfaceCrossReference_3_0; }

		//ID
		public RuleCall getSuperInterfacesInterfaceIDTerminalRuleCall_3_0_1() { return cSuperInterfacesInterfaceIDTerminalRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(altmethods+=AltMethod | optmethods+=OptMethod)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//altmethods+=AltMethod
		public Assignment getAltmethodsAssignment_5_0() { return cAltmethodsAssignment_5_0; }

		//AltMethod
		public RuleCall getAltmethodsAltMethodParserRuleCall_5_0_0() { return cAltmethodsAltMethodParserRuleCall_5_0_0; }

		//optmethods+=OptMethod
		public Assignment getOptmethodsAssignment_5_1() { return cOptmethodsAssignment_5_1; }

		//OptMethod
		public RuleCall getOptmethodsOptMethodParserRuleCall_5_1_0() { return cOptmethodsOptMethodParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterfaceComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMethodsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMethodsMethodParserRuleCall_3_0 = (RuleCall)cMethodsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Interface:
		//	"interface component" name=ID "{" methods+=Method* "}";
		public ParserRule getRule() { return rule; }

		//"interface component" name=ID "{" methods+=Method* "}"
		public Group getGroup() { return cGroup; }

		//"interface component"
		public Keyword getInterfaceComponentKeyword_0() { return cInterfaceComponentKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//methods+=Method*
		public Assignment getMethodsAssignment_3() { return cMethodsAssignment_3; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_3_0() { return cMethodsMethodParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamParamParserRuleCall_3_0_0 = (RuleCall)cParamAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamParamParserRuleCall_3_1_1_0 = (RuleCall)cParamAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Method:
		//	type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");";
		public ParserRule getRule() { return rule; }

		//type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");"
		public Group getGroup() { return cGroup; }

		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(param+=Param ("," param+=Param)*)?
		public Group getGroup_3() { return cGroup_3; }

		//param+=Param
		public Assignment getParamAssignment_3_0() { return cParamAssignment_3_0; }

		//Param
		public RuleCall getParamParamParserRuleCall_3_0_0() { return cParamParamParserRuleCall_3_0_0; }

		//("," param+=Param)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//param+=Param
		public Assignment getParamAssignment_3_1_1() { return cParamAssignment_3_1_1; }

		//Param
		public RuleCall getParamParamParserRuleCall_3_1_1_0() { return cParamParamParserRuleCall_3_1_1_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_4() { return cRightParenthesisSemicolonKeyword_4; }
	}

	public class AltMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AltMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cCallInterfaceAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cCallInterfaceInterfaceCrossReference_0_0_0 = (CrossReference)cCallInterfaceAssignment_0_0.eContents().get(0);
		private final RuleCall cCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1 = (RuleCall)cCallInterfaceInterfaceCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_2_0_0 = (RuleCall)cTypeAssignment_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Assignment cParamAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final RuleCall cParamParamParserRuleCall_2_3_0_0 = (RuleCall)cParamAssignment_2_3_0.eContents().get(0);
		private final Group cGroup_2_3_1 = (Group)cGroup_2_3.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_1_0 = (Keyword)cGroup_2_3_1.eContents().get(0);
		private final Assignment cParamAssignment_2_3_1_1 = (Assignment)cGroup_2_3_1.eContents().get(1);
		private final RuleCall cParamParamParserRuleCall_2_3_1_1_0 = (RuleCall)cParamAssignment_2_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisCommaKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeIDTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cParamAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cParamParamParserRuleCall_6_0_0 = (RuleCall)cParamAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cParamAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cParamParamParserRuleCall_6_1_1_0 = (RuleCall)cParamAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AltMethod:
		//	(callInterface=[Interface] ".")? "{" (type+=ID name+=ID "(" (param+=Param ("," param+=Param)*)? "),")* type+=ID
		//	name+=ID "(" (param+=Param ("," param+=Param)*)? ")" "};";
		public ParserRule getRule() { return rule; }

		//(callInterface=[Interface] ".")? "{" (type+=ID name+=ID "(" (param+=Param ("," param+=Param)*)? "),")* type+=ID name+=ID
		//"(" (param+=Param ("," param+=Param)*)? ")" "};"
		public Group getGroup() { return cGroup; }

		//(callInterface=[Interface] ".")?
		public Group getGroup_0() { return cGroup_0; }

		//callInterface=[Interface]
		public Assignment getCallInterfaceAssignment_0_0() { return cCallInterfaceAssignment_0_0; }

		//[Interface]
		public CrossReference getCallInterfaceInterfaceCrossReference_0_0_0() { return cCallInterfaceInterfaceCrossReference_0_0_0; }

		//ID
		public RuleCall getCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1() { return cCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(type+=ID name+=ID "(" (param+=Param ("," param+=Param)*)? "),")*
		public Group getGroup_2() { return cGroup_2; }

		//type+=ID
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_2_0_0() { return cTypeIDTerminalRuleCall_2_0_0; }

		//name+=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_2() { return cLeftParenthesisKeyword_2_2; }

		//(param+=Param ("," param+=Param)*)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//param+=Param
		public Assignment getParamAssignment_2_3_0() { return cParamAssignment_2_3_0; }

		//Param
		public RuleCall getParamParamParserRuleCall_2_3_0_0() { return cParamParamParserRuleCall_2_3_0_0; }

		//("," param+=Param)*
		public Group getGroup_2_3_1() { return cGroup_2_3_1; }

		//","
		public Keyword getCommaKeyword_2_3_1_0() { return cCommaKeyword_2_3_1_0; }

		//param+=Param
		public Assignment getParamAssignment_2_3_1_1() { return cParamAssignment_2_3_1_1; }

		//Param
		public RuleCall getParamParamParserRuleCall_2_3_1_1_0() { return cParamParamParserRuleCall_2_3_1_1_0; }

		//"),"
		public Keyword getRightParenthesisCommaKeyword_2_4() { return cRightParenthesisCommaKeyword_2_4; }

		//type+=ID
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_3_0() { return cTypeIDTerminalRuleCall_3_0; }

		//name+=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//(param+=Param ("," param+=Param)*)?
		public Group getGroup_6() { return cGroup_6; }

		//param+=Param
		public Assignment getParamAssignment_6_0() { return cParamAssignment_6_0; }

		//Param
		public RuleCall getParamParamParserRuleCall_6_0_0() { return cParamParamParserRuleCall_6_0_0; }

		//("," param+=Param)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//param+=Param
		public Assignment getParamAssignment_6_1_1() { return cParamAssignment_6_1_1; }

		//Param
		public RuleCall getParamParamParserRuleCall_6_1_1_0() { return cParamParamParserRuleCall_6_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//"};"
		public Keyword getRightCurlyBracketSemicolonKeyword_8() { return cRightCurlyBracketSemicolonKeyword_8; }
	}

	public class OptMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cCallInterfaceAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cCallInterfaceInterfaceCrossReference_0_0_0 = (CrossReference)cCallInterfaceAssignment_0_0.eContents().get(0);
		private final RuleCall cCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1 = (RuleCall)cCallInterfaceInterfaceCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeIDTerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cParamAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cParamParamParserRuleCall_5_0_0 = (RuleCall)cParamAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cParamAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cParamParamParserRuleCall_5_1_1_0 = (RuleCall)cParamAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//OptMethod:
		//	(callInterface=[Interface] ".")? "[" type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");" "]";
		public ParserRule getRule() { return rule; }

		//(callInterface=[Interface] ".")? "[" type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");" "]"
		public Group getGroup() { return cGroup; }

		//(callInterface=[Interface] ".")?
		public Group getGroup_0() { return cGroup_0; }

		//callInterface=[Interface]
		public Assignment getCallInterfaceAssignment_0_0() { return cCallInterfaceAssignment_0_0; }

		//[Interface]
		public CrossReference getCallInterfaceInterfaceCrossReference_0_0_0() { return cCallInterfaceInterfaceCrossReference_0_0_0; }

		//ID
		public RuleCall getCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1() { return cCallInterfaceInterfaceIDTerminalRuleCall_0_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//type=ID
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_2_0() { return cTypeIDTerminalRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//(param+=Param ("," param+=Param)*)?
		public Group getGroup_5() { return cGroup_5; }

		//param+=Param
		public Assignment getParamAssignment_5_0() { return cParamAssignment_5_0; }

		//Param
		public RuleCall getParamParamParserRuleCall_5_0_0() { return cParamParamParserRuleCall_5_0_0; }

		//("," param+=Param)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//param+=Param
		public Assignment getParamAssignment_5_1_1() { return cParamAssignment_5_1_1; }

		//Param
		public RuleCall getParamParamParserRuleCall_5_1_1_0() { return cParamParamParserRuleCall_5_1_1_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_6() { return cRightParenthesisSemicolonKeyword_6; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
	}

	public class ParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Param");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Param:
		//	type=ID name=ID;
		public ParserRule getRule() { return rule; }

		//type=ID name=ID
		public Group getGroup() { return cGroup; }

		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class BehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Behavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInterfaceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cInterfaceInterfaceCrossReference_0_0 = (CrossReference)cInterfaceAssignment_0.eContents().get(0);
		private final RuleCall cInterfaceInterfaceIDTerminalRuleCall_0_0_1 = (RuleCall)cInterfaceInterfaceCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cCallAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cCallMethodCrossReference_3_0_0 = (CrossReference)cCallAssignment_3_0.eContents().get(0);
		private final RuleCall cCallMethodFQNParserRuleCall_3_0_0_1 = (RuleCall)cCallMethodCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cCallAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cCallMethodCrossReference_3_1_1_0 = (CrossReference)cCallAssignment_3_1_1.eContents().get(0);
		private final RuleCall cCallMethodFQNParserRuleCall_3_1_1_0_1 = (RuleCall)cCallMethodCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cEndAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cEndInterfaceCrossReference_3_3_0 = (CrossReference)cEndAssignment_3_3.eContents().get(0);
		private final RuleCall cEndInterfaceIDTerminalRuleCall_3_3_0_1 = (RuleCall)cEndInterfaceCrossReference_3_3_0.eContents().get(1);
		private final Keyword cRightParenthesisSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Behavior:
		//	interface=[Interface] "=" "(" (call+=[Method|FQN] ("->" call+=[Method|FQN])* "->" end=[Interface])? ");";
		public ParserRule getRule() { return rule; }

		//interface=[Interface] "=" "(" (call+=[Method|FQN] ("->" call+=[Method|FQN])* "->" end=[Interface])? ");"
		public Group getGroup() { return cGroup; }

		//interface=[Interface]
		public Assignment getInterfaceAssignment_0() { return cInterfaceAssignment_0; }

		//[Interface]
		public CrossReference getInterfaceInterfaceCrossReference_0_0() { return cInterfaceInterfaceCrossReference_0_0; }

		//ID
		public RuleCall getInterfaceInterfaceIDTerminalRuleCall_0_0_1() { return cInterfaceInterfaceIDTerminalRuleCall_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(call+=[Method|FQN] ("->" call+=[Method|FQN])* "->" end=[Interface])?
		public Group getGroup_3() { return cGroup_3; }

		//call+=[Method|FQN]
		public Assignment getCallAssignment_3_0() { return cCallAssignment_3_0; }

		//[Method|FQN]
		public CrossReference getCallMethodCrossReference_3_0_0() { return cCallMethodCrossReference_3_0_0; }

		//FQN
		public RuleCall getCallMethodFQNParserRuleCall_3_0_0_1() { return cCallMethodFQNParserRuleCall_3_0_0_1; }

		//("->" call+=[Method|FQN])*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_1_0() { return cHyphenMinusGreaterThanSignKeyword_3_1_0; }

		//call+=[Method|FQN]
		public Assignment getCallAssignment_3_1_1() { return cCallAssignment_3_1_1; }

		//[Method|FQN]
		public CrossReference getCallMethodCrossReference_3_1_1_0() { return cCallMethodCrossReference_3_1_1_0; }

		//FQN
		public RuleCall getCallMethodFQNParserRuleCall_3_1_1_0_1() { return cCallMethodFQNParserRuleCall_3_1_1_0_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2() { return cHyphenMinusGreaterThanSignKeyword_3_2; }

		//end=[Interface]
		public Assignment getEndAssignment_3_3() { return cEndAssignment_3_3; }

		//[Interface]
		public CrossReference getEndInterfaceCrossReference_3_3_0() { return cEndInterfaceCrossReference_3_3_0; }

		//ID
		public RuleCall getEndInterfaceIDTerminalRuleCall_3_3_0_1() { return cEndInterfaceIDTerminalRuleCall_3_3_0_1; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_4() { return cRightParenthesisSemicolonKeyword_4; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	private ModelElements pModel;
	private UncertainInterfaceElements pUncertainInterface;
	private InterfaceElements pInterface;
	private MethodElements pMethod;
	private AltMethodElements pAltMethod;
	private OptMethodElements pOptMethod;
	private ParamElements pParam;
	private BehaviorElements pBehavior;
	private FQNElements pFQN;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ArchDSLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("jp.ac.kyushu.iarch.archdsl.ArchDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	(interfaces+=Interface | u_interfaces+=UncertainInterface)* behaviors+=Behavior*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//UncertainInterface:
	//	"interface uncertain" name=ID "u_extends" superInterfaces+=[Interface] "{" (altmethods+=AltMethod |
	//	optmethods+=OptMethod)* "}";
	public UncertainInterfaceElements getUncertainInterfaceAccess() {
		return (pUncertainInterface != null) ? pUncertainInterface : (pUncertainInterface = new UncertainInterfaceElements());
	}
	
	public ParserRule getUncertainInterfaceRule() {
		return getUncertainInterfaceAccess().getRule();
	}

	//Interface:
	//	"interface component" name=ID "{" methods+=Method* "}";
	public InterfaceElements getInterfaceAccess() {
		return (pInterface != null) ? pInterface : (pInterface = new InterfaceElements());
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}

	//Method:
	//	type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");";
	public MethodElements getMethodAccess() {
		return (pMethod != null) ? pMethod : (pMethod = new MethodElements());
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//AltMethod:
	//	(callInterface=[Interface] ".")? "{" (type+=ID name+=ID "(" (param+=Param ("," param+=Param)*)? "),")* type+=ID
	//	name+=ID "(" (param+=Param ("," param+=Param)*)? ")" "};";
	public AltMethodElements getAltMethodAccess() {
		return (pAltMethod != null) ? pAltMethod : (pAltMethod = new AltMethodElements());
	}
	
	public ParserRule getAltMethodRule() {
		return getAltMethodAccess().getRule();
	}

	//OptMethod:
	//	(callInterface=[Interface] ".")? "[" type=ID name=ID "(" (param+=Param ("," param+=Param)*)? ");" "]";
	public OptMethodElements getOptMethodAccess() {
		return (pOptMethod != null) ? pOptMethod : (pOptMethod = new OptMethodElements());
	}
	
	public ParserRule getOptMethodRule() {
		return getOptMethodAccess().getRule();
	}

	//Param:
	//	type=ID name=ID;
	public ParamElements getParamAccess() {
		return (pParam != null) ? pParam : (pParam = new ParamElements());
	}
	
	public ParserRule getParamRule() {
		return getParamAccess().getRule();
	}

	//Behavior:
	//	interface=[Interface] "=" "(" (call+=[Method|FQN] ("->" call+=[Method|FQN])* "->" end=[Interface])? ");";
	public BehaviorElements getBehaviorAccess() {
		return (pBehavior != null) ? pBehavior : (pBehavior = new BehaviorElements());
	}
	
	public ParserRule getBehaviorRule() {
		return getBehaviorAccess().getRule();
	}

	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
