次回の会議
	1/5 18:00 

参加者
郭,李,艾,深町
鵜林先生

予定----------------------
修論
	- 提出締め切り
		1/13 (火)初版
		2/2 (月)内部最終
		2/5 (木)発表練習
		
卒論
	- 提出締め切り
		1/13 (火)初版
		2/2 (月)内部最終
		2/5 (木)発表練習
		
1月９日リファクタリング 15時から
-------------------------
深町
	done
		FOSE 12/11-12/13
		ポスター
		
	todo
		- todo
			
		卒論 2/10 締め切り(日本語)
		論文テーマ：FOSEで発表したもの
			connectorの実装
			
		- 卒論目次
			1 はじめに
			2 Uncertainty研究目的・アプローチ
				関連研究
			3 Uncertaintyモジュール化
				着脱
			4 ツール実装
			5 評価
			6 おわり			
	イベント		
	
	
	WWS 1/22-1/23
	SIGSE 1月or2月
		卒論
		

			

艾
	done
		FOSE 12/11-12/13
		
	todo
	
		- 富良野の論文を卒論のformatに変わた論文(日本語)12/16
			50ページ前後
		
		- 文章を埋める(スナップショットなどを除く) 12/22
		
		- 第一版に向けてのレビュー 1/5
		
		- 完成 1/13
		
		- SIGSSへ
		
		- MoveM2C Mの部分の実装

李
	done
		- ?
		
		
	todo
		- コード追加時、モデル・Archfaceに反映する機能、コード再生成orなし☓
		→Archfaceからソースコードに変換する部分担当
			モデルからの変更情報をもってソースコードに反映する
				AST解析
			
			Archface(変更あり)からコードを再生成しても消えない 
				コントロールフロー
					->追加コードがコントロールフローに載せているかをチェック
				クラス宣言
				メソッド呼び出し
				
				
	FOSE
		内容：上の出来たもの+α(アノテーション検証 例:AspectJML)
		ライブ論文申し込み(9/29)
		(12/11~13)
		


		


		
李（シャビ）
	予定
		- 12/13 帰国
		~遅くとも 12/27 まで戻る
	
	done
		
		
	todo
		- 講究３のメールを出す 12/8
		
		- 論文を書く（前の論文をベースに以下を追加）:English	12/8
			実装の方法
			画面キャプチャーと説明
			
		- 1.ソースコード->Archface 何も考えずに
			<-問題がある
				繋がる必要はある
		- コードを選択すると、関連部分の色表示
		- reverse tool
			1.ソースコード->Archface 何も考えずに (5/12)->(5/26)->(06/02)->(06/16)
				- 正しいソースコードでArchface生成できるまでデバッグ． 	(7/15)
				- 差分を削除(ルールを考えて->ステップ2)					(7/28)
				
			2.抽象化するためのルールを考えて、それに従って生成する 
				★ルール検討(設計)、API削除ルールの実装(6/2)->できれば OCL
				講究2の発表資料作成(6/9)
				講究2の発表(スケジュール調整:6/16~ or 23~)->発表日時(7/1)
				残りのルールの実装 (7/28)
			3.ソースコード内の要素を部分指定して、モデル生成の範囲を推論する(9/8)		
		
	
		
	
	今後のテーマ
		- コードから抽象度高い要素スケッチベースでの抽出
		
	発表
		
		- 講究3の代わりに
		FSE 11/15-11/21
		発表 25分
			10 分	発表
			10 分	デモ　(30日デモ出来るように)15:30-16:30
				Modularityのを使って5分
				本質の部分を5分
			5 分	質疑
		ツールデモ
		シナリオ
			updateを選択して、関連のシーケンスを生成(一旦全部生成して、updateを含むbehaviorを抽出)
			addObserverを追加で反映するのを選んで、再生成？

		- 修論: 講究3をベースに(英語)
		
		
		

郭
	done
		
		
	todo
		- dataflowのチェック
		- 3月SIGSEの論文を書く 1/5
		- user storyを使って，dataflow図を作成，そこで足りない情報を発見，追加実装
			例えばArchfaceにdata(Attribute)の追加
		
		
		
	3月SIGSE
		- 沖縄いく!?->沖縄いく!

	論文
		タイトル
			モデルとコード間のデータフロートレーサビリティ
		内容
			1 はじめに
			2 MDDにおけるデータフロー
			3 今回扱うデータフロートレーサビリティ
			4 ツール実装
			5 まとめ&今後の課題
		1月末完成


Todo
	1.0 1月末まで
		- ファイル出力：抽象度履歴情報　(深町)		todo
		- コードのリファクタリング (シャビ)			done
		- エラーのコードを色付させける (シャビ)		done
		- エラーのモデルを色付させける (艾)			done
		- datatypeをメタモデルに入れる	(艾)		doing
			UML2メタモデルをそのまま使うのを提案
		
		- セーブする時自動的にチェック	(艾)		done

		
		保留
			- ダイアログの大きさを調整　(細合)
			- bug修正：抽象度表示の字がはみ出している (山本、細合)->原因解明
	
	1.2 4月
		- コンパイラを呼び出す　(細合)
		- 修正候補：quick fix
		- リファクタリング支援  (艾)
			メニュー：リファクタリング
				リファクタリングパターンの自動適用
				archface書き換える
				影響範囲
				
			
			
			
		- dataflow図を入れる
		
		
	1.3
		- reverse tool
		- コード追加時、モデル・Archfaceに反映する機能、コード再生成orなし
			API削除オプションなど
		- APIの情報含む場合と含まない場合の抽象度表示
		- 選択した要素だけ、関連要素の色が変わる
		- Archfaceからテストコードの生成
	
	?.?
		- data flow
		- 言語依存しない
