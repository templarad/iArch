次回の会議
	10/27 18:00 

参加者
李,艾,深町
鵜林先生

予定----------------------
共同研究報告会
11/28(金)
13:00~17:00
場所：LSIセンター
懇親会：磯貝
文献紹介
	①FOSE&SA(艾迪)
	②RE&MODELS(深町)
研究紹介
	①......
-------------------------
深町
	done

		
	todo
		- todo
			一個一個のUncertainなarchfaceを記述できるようにする
			着脱が出来るように
			junitの勉強
			test caseの自動生成(スケルトン？全部？)
			
		卒論 2/10 締め切り
		- 卒論目次
			1 はじめに
			2 Uncertainty研究目的・アプローチ
				関連研究
			3 Uncertaintyモジュール化
				着脱
			4 ツール実装
			5 評価
			6 おわり			
	イベント		
	
	FOSE 12/11-12/13
		ポスター
	WWS 1/22-1/23
	SIGSE 1月or2月
		卒論
		

			

艾
	done
		- Archfaceからクラス図の生成
		
		
	todo		
		- MoveC2M Mの部分の実装
			関連を入れる
			レイアウトの調整			
			Archfaceからシーケンス図の生成(11/16)
		- MoveM2C Mの部分の実装


李
	done
		
		
	todo
		- コード追加時、モデル・Archfaceに反映する機能、コード再生成orなし☓
		→Archfaceからソースコードに変換する部分担当
			モデルからの変更情報をもってソースコードに反映する
				AST解析
			
			Archface(変更あり)からコードを再生成しても消えない 
				コントロールフロー
					->追加コードがコントロールフローに載せているかをチェック
				クラス宣言
				メソッド呼び出し
				
				
	FOSE
		内容：上の出来たもの+α(アノテーション検証 例:AspectJML)
		ライブ論文申し込み(9/29)
		(12/11~13)
		


		
Todo
	1.0 1月末まで
		- ファイル出力：抽象度履歴情報　(深町)		todo
		- コードのリファクタリング (シャビ)			done
		- エラーのコードを色付させける (シャビ)		done
		- エラーのモデルを色付させける (艾)			done
		- datatypeをメタモデルに入れる	(艾)		doing
			UML2メタモデルをそのまま使うのを提案
		
		- セーブする時自動的にチェック	(艾)		done

		
		保留
		- ダイアログの大きさを調整　(細合)
		- bug修正：抽象度表示の字がはみ出している (山本、細合)->原因解明
	
	1.2 4月
		- コンパイラを呼び出す　(細合)
		- 修正候補：quick fix
		- リファクタリング支援  (艾)
			メニュー：リファクタリング
				リファクタリングパターンの自動適用
				archface書き換える
				影響範囲
				
			
			
		- dataflow図を入れる
		- 例題:三つくらい抽象度収束する例題
		
		
	1.3
		- reverse tool
		- コード追加時、モデル・Archfaceに反映する機能、コード再生成orなし
			API削除オプションなど
		- APIの情報含む場合と含まない場合の抽象度表示
		- 選択した要素だけ、関連要素の色が変わる
		- Archfaceからテストコードの生成
	
	?.?
		- data flow
		- 言語依存しない

		
//-------------------------------------
郭
	done
		- 次回でデータフロー図の仕様を決める(Archfaceとの対応関係)
		
	todo
		- 仕様に基いてDiagramとArchfaceをチェックする

		
李（シャビ）
	done
		
		
	todo
		- 1.ソースコード->Archface 何も考えずに
			<-問題がある
				繋がる必要はある
		- コードを選択すると、関連部分の色表示
		- reverse tool
			1.ソースコード->Archface 何も考えずに (5/12)->(5/26)->(06/02)->(06/16)
				- 正しいソースコードでArchface生成できるまでデバッグ． 	(7/15)
				- 差分を削除(ルールを考えて->ステップ2)					(7/28)
				
			2.抽象化するためのルールを考えて、それに従って生成する 
				★ルール検討(設計)、API削除ルールの実装(6/2)->できれば OCL
				講究2の発表資料作成(6/9)
				講究2の発表(スケジュール調整:6/16~ or 23~)->発表日時(7/1)
				残りのルールの実装 (7/28)
			3.ソースコード内の要素を部分指定して、モデル生成の範囲を推論する(9/8)		
		
	
		
	
	今後のテーマ
		- コードから抽象度高い要素スケッチベースでの抽出
		
	発表
		- 講究3の代わりに
		FSE 11/15-11/21
		ツールデモ
		シナリオ
			updateを選択して、関連のシーケンスを生成
			printlnを追加で反映するのを選んで、再生成？

		- 修論: 講究3をベースに(英語)
		
		
			
			
